#!/bin/bash

# Copyright (c) 2020, James Bowen, All Rights Reserved

# Output to stderr if no logfile passed
SYNOPKG_TEMP_LOGFILE=${SYNOPKG_TEMP_LOGFILE:-"/dev/stderr"}

# Verify required environment variables set
for var in SYNOPKG_PKG_STATUS SYNOPKG_PKGDEST_VOL SYNOPKG_PKGNAME; do
    eval "val=\$$var"
    if [ -z "$val" ]; then
        echo "ERROR: Required environment variable '$var' not set." >> ${SYNOPKG_TEMP_LOGFILE}
        exit 1
    fi
done

CONF_DIR="/var/packages/${SYNOPKG_PKGNAME}/etc"
TARGET_DIR="/var/packages/${SYNOPKG_PKGNAME}/target"

# Assign default values to InfluxDB if not set
TELEGRAF_INFLUXDB_URL=${TELEGRAF_INFLUXDB_URL:-"http://127.0.0.1:8086"}
TELEGRAF_INFLUXDB_DBNAME=${TELEGRAF_INFLUXDB_DBNAME:-"telegraf"}

# List of plugins having preconfigured snippets. Snippets are installed
# in ${TARGET_DIR}/etc/telegraf.d but are inactive unless copied to
# ${CONF_DIR}/telegraf.d. Snippet files are named input-<name>.conf.
plugin_names="cpu disk diskio kernel mem processes swap system internal net procstat_telegraf procstat_influxdb procstat_grafana"

# Perform the following only during initial installation
if [ "${SYNOPKG_PKG_STATUS}" = "INSTALL" ]; then

    env | sort > ${TARGET_DIR}/install-env

    # Create directory for config snippets
    mkdir -p ${CONF_DIR}/telegraf.d/

    # Copy base config
    cp ${TARGET_DIR}/etc/telegraf.conf ${CONF_DIR}/telegraf.conf

    # Create output config for influxDB using values read from Wizard UI
    cat >${CONF_DIR}/telegraf.d/output-influxdb.conf <<-END_OF_CONFIG
# Autogenerated on $(date)

# Configuration for sending metrics to InfluxDB
[[outputs.influxdb]]
  ## The full HTTP or UDP URL for your InfluxDB instance.
  urls = ["${TELEGRAF_INFLUXDB_URL}"]

  ## The target database for metrics; will be created as needed.
  ## For UDP url endpoint database needs to be configured on server side.
  database = "${TELEGRAF_INFLUXDB_DBNAME}"

  ## The value of this tag will be used to determine the database.  If this
  ## tag is not set the 'database' option is used as the default.
  # database_tag = ""

  ## If true, the 'database_tag' will not be included in the written metric.
  # exclude_database_tag = false

  ## If true, no CREATE DATABASE queries will be sent.  Set to true when using
  ## Telegraf with a user without permissions to create databases or when the
  ## database already exists.
  # skip_database_creation = false

  ## Name of existing retention policy to write to.  Empty string writes to
  ## the default retention policy.  Only takes effect when using HTTP.
  # retention_policy = ""

  ## The value of this tag will be used to determine the retention policy.  If this
  ## tag is not set the 'retention_policy' option is used as the default.
  # retention_policy_tag = ""

  ## If true, the 'retention_policy_tag' will not be included in the written metric.
  # exclude_retention_policy_tag = false

  ## Write consistency (clusters only), can be: "any", "one", "quorum", "all".
  ## Only takes effect when using HTTP.
  # write_consistency = "any"

  ## Timeout for HTTP messages.
  # timeout = "5s"

  ## HTTP Basic Auth
  # username = "telegraf"
  # password = "metricsmetricsmetricsmetrics"

  ## HTTP User-Agent
  # user_agent = "telegraf"

  ## UDP payload size is the maximum packet size to send.
  # udp_payload = "512B"

  ## Optional TLS Config for use on HTTP connections.
  # tls_ca = "/etc/telegraf/ca.pem"
  # tls_cert = "/etc/telegraf/cert.pem"
  # tls_key = "/etc/telegraf/key.pem"
  ## Use TLS but skip chain & host verification
  # insecure_skip_verify = false

  ## HTTP Proxy override, if unset values the standard proxy environment
  ## variables are consulted to determine which proxy, if any, should be used.
  # http_proxy = "http://corporate.proxy:3128"

  ## Additional HTTP headers
  # http_headers = {"X-Special-Header" = "Special-Value"}

  ## HTTP Content-Encoding for write request body, can be set to "gzip" to
  ## compress body or "identity" to apply no encoding.
  # content_encoding = "identity"

  ## When true, Telegraf will output unsigned integers as unsigned values,
  ## i.e.: "42u".  You will need a version of InfluxDB supporting unsigned
  ## integer values.  Enabling this option will result in field type errors if
  ## existing data has been written.
  # influx_uint_support = false


END_OF_CONFIG

    # Copy any enabled input plugin config snipets
    for name in ${plugin_names}; do
        ## wizard variable is all caps so ${name^^} converts name to NAME
        var="TELEGRAF_INPUT_${name^^}"
        if [ "${!var}" == "true" ]; then
            cp ${TARGET_DIR}/etc/telegraf.d/input-${name}.conf ${CONF_DIR}/telegraf.d/
        fi
    done
fi

exit 0
